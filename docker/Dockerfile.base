FROM alpine:3.14.1

ENV PHP_INI_DIR /etc/php8
EXPOSE 80
ENTRYPOINT ["/init"]
# Set default working directory for whole docker execution
WORKDIR /home/www/app
ARG PHP_ENV

# Runtime distribution filename.
ARG BUILD_DATE
ARG VCS_REF
ARG BUILD_VERSION

# Labels.
LABEL com.jivecode.schema-version="1.0" \
    com.jivecode.build-date=$BUILD_DATE \
    com.jivecode.name="vinhxike/docker-php:php8" \
    com.jivecode.description="Docker PHP 8" \
    com.jivecode.url="http://www.jivecode.com" \
    com.jivecode.vcs-url="https://github.com/vinhxike/docker-php" \
    com.jivecode.vcs-ref=$VCS_REF \
    com.jivecode.vendor="JiveCode" \
    com.jivecode.version=$BUILD_VERSION \
    com.jivecode.docker.cmd="docker run -p 8080:80 php8-base"

# Install packages
RUN apk add --update --no-cache bash \
	#ca-certificates \
	#openssh-client \
	#libmemcached-libs \
	#openssl \
	#libevent \
	yaml \
	curl \
	nginx

# In case build docker on Windows
#RUN apk add --update dos2unix

# Upgrade PHP version 8
RUN apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community php

# Install building packages (build XDebug,....)
#RUN apk add --update --no-cache \
#     libgcc \
#     libstdc++ \
#     glib \
#     gcc \
#     libevent-dev \
#     openssl-dev \
#     libc-dev \
#     make \
#     autoconf \
#     libtool

# Install PHP and related packages
RUN apk add --update --no-cache \
	php8 \
	php8-intl \
	php8-openssl \
	php8-dba \
	php8-sqlite3 \
	php8-pear \
	php8-phpdbg \
	php8-gmp \
	php8-pdo_mysql \
	php8-pcntl \
	php8-common \
	php8-xsl \
	php8-fpm \
	#php8-mysql \
	php8-mysqli \
	php8-enchant \
	php8-pspell \
	php8-snmp \
	php8-doc \
	# Disable dev
	#php8-dev \
	# Don't have
	#php8-xmlrpc \
	php8-embed \
	php8-xmlreader \
	php8-pdo_sqlite \
	php8-exif \
	php8-opcache \
	php8-ldap \
	php8-posix \
	php8-gd \
	php8-gettext \
	php8-json \
	php8-xml \
	php8-iconv \
	php8-sysvshm \
	php8-curl \
	php8-shmop \
	php8-odbc \
	php8-phar \
	php8-pdo_pgsql \
	php8-imap \
	php8-pdo_dblib \
	php8-pgsql \
	php8-pdo_odbc \
	php8-pecl-xdebug \
	php8-zip \
	php8-cgi \
	php8-ctype \
	#php8-wddx \
	php8-bcmath \
	php8-calendar \
	php8-dom \
	php8-sockets \
	php8-soap \
	php8-sysvmsg \
	php8-zlib \
	php8-ftp \
	php8-sysvsem \
	php8-pdo \
	php8-bz2 \
	php8-tokenizer \
    php8-xmlwriter \
    php8-fileinfo \
    php8-mbstring \
    php8-mysqlnd \
    php8-session \
    php8-tidy \
    php8-simplexml \
    php8-redis \
    php8-pecl-imagick \
	php8-pecl-mcrypt \
    php8-pecl-apcu

# Install XDebug from source
#RUN pecl install xdebug

# Remove redundant file
RUN rm -f /etc/php8/php-fpm.d/www.conf \
    && rm -f /etc/php8/conf.d/00_zlib.ini \
    && rm -f /etc/php8/conf.d/50_xdebug.ini \
    && rm -f /etc/nginx/conf.d/default.conf \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/*

# Create system link for php8 to php (Alias)
RUN ln -s /usr/bin/php8 /usr/bin/php

# Install S6 overlay
RUN curl -LSs -o /tmp/s6-overlay-amd64.tar.gz \
    https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-amd64.tar.gz && \
    tar xzf /tmp/s6-overlay-amd64.tar.gz -C / && \
    rm -f /tmp/s6-overlay-amd64.tar.gz

# Remove building packages
#RUN apk del libgcc \
#     libstdc++ \
#     glib \
#     gcc \
#     libevent-dev \
#     openssl-dev \
#     libc-dev \
#     make \
#     autoconf \
#     libtool

### Copy configuration files
ADD rootfs /

### Change permission folders
RUN nginxUID=`id -u nginx` &&\
    nginxGID=`id -g nginx` &&\
    deluser nginx &&\
    addgroup -g $nginxGID nginx &&\
    adduser -S -u $nginxUID -G nginx -h /home/www -s /sbin/nologin nginx &&\
    chown -R nginx:nginx /home/www/app

### Fix execute scripts when build docker on Windows
#RUN find /etc/cont-init.d -type f -print0 | xargs -0 dos2unix --
#RUN find /etc/nginx -type f -print0 | xargs -0 dos2unix --
#RUN find /etc/php8 -type f -print0 | xargs -0 dos2unix --
#RUN find /etc/services.d -type f -print0 | xargs -0 dos2unix --
#RUN find /home/www -type f -print0 | xargs -0 dos2unix --
#RUN find /root -type f -print0 | xargs -0 dos2unix --
#RUN find /tmp -type f -print0 | xargs -0 dos2unix --
