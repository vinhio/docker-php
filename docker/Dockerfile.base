FROM alpine:3.14.1

ENV PHP_INI_DIR /etc/php7
EXPOSE 80
ENTRYPOINT ["/init"]
# Set default working directory for whole docker execution
WORKDIR /home/www/app
ARG PHP_ENV

# Runtime distribution filename.
ARG BUILD_DATE
ARG VCS_REF
ARG BUILD_VERSION

# Labels.
LABEL com.jivecode.schema-version="1.0" \
    com.jivecode.build-date=$BUILD_DATE \
    com.jivecode.name="vinhxike/docker-php:php7" \
    com.jivecode.description="Docker PHP 7" \
    com.jivecode.url="http://www.jivecode.com" \
    com.jivecode.vcs-url="https://github.com/vinhxike/docker-php" \
    com.jivecode.vcs-ref=$VCS_REF \
    com.jivecode.vendor="JiveCode" \
    com.jivecode.version=$BUILD_VERSION \
    com.jivecode.docker.cmd="docker run -p 8080:80 php7-base"

# Install packages
RUN apk add --update --no-cache bash \
	#ca-certificates \
	#openssh-client \
	#libmemcached-libs \
	#openssl \
	#libevent \
	yaml \
	curl \
	nginx

# In case build docker on Windows
#RUN apk add --update dos2unix

# Upgrade PHP version 7.4
RUN apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community php

# Install building packages (build XDebug,....)
#RUN apk add --update --no-cache \
#     libgcc \
#     libstdc++ \
#     glib \
#     gcc \
#     libevent-dev \
#     openssl-dev \
#     libc-dev \
#     make \
#     autoconf \
#     libtool

# Install PHP and related packages
RUN apk add --update --no-cache \
	php7 \
	php7-intl \
	php7-openssl \
	php7-dba \
	php7-sqlite3 \
	php7-pear \
	php7-phpdbg \
	php7-gmp \
	php7-pdo_mysql \
	php7-pcntl \
	php7-common \
	php7-xsl \
	php7-fpm \
	#php7-mysql \
	php7-mysqli \
	php7-enchant \
	php7-pspell \
	php7-snmp \
	php7-doc \
	# Disable dev
	#php7-dev \
	php7-xmlrpc \
	php7-embed \
	php7-xmlreader \
	php7-pdo_sqlite \
	php7-exif \
	php7-opcache \
	php7-ldap \
	php7-posix \
	php7-gd \
	php7-gettext \
	php7-json \
	php7-xml \
	php7-iconv \
	php7-sysvshm \
	php7-curl \
	php7-shmop \
	php7-odbc \
	php7-phar \
	php7-pdo_pgsql \
	php7-imap \
	php7-pdo_dblib \
	php7-pgsql \
	php7-pdo_odbc \
	php7-pecl-xdebug \
	php7-zip \
	php7-cgi \
	php7-ctype \
	php7-mcrypt \
	#php7-wddx \
	php7-bcmath \
	php7-calendar \
	php7-dom \
	php7-sockets \
	php7-soap \
	php7-sysvmsg \
	php7-zlib \
	php7-ftp \
	php7-sysvsem \
	php7-pdo \
	php7-bz2 \
	php7-tokenizer \
    php7-xmlwriter \
    php7-fileinfo \
    php7-mbstring \
    php7-mysqlnd \
    php7-session \
    php7-tidy \
    php7-simplexml \
    php7-redis \
    php7-imagick \
    php7-pecl-apcu

# Install XDebug from source
#RUN pecl install xdebug

# Remove redundant file
RUN rm -f /etc/php7/php-fpm.d/www.conf \
    && rm -f /etc/php7/conf.d/00_zlib.ini \
    && rm -f /etc/php7/conf.d/50_xdebug.ini \
    && rm -f /etc/nginx/conf.d/default.conf \
    && rm -rf /var/cache/apk/* \
    && rm -rf /tmp/*

# Create system link for php7 to php (Alias)

# Install S6 overlay
RUN curl -LSs -o /tmp/s6-overlay-amd64.tar.gz \
    https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-amd64.tar.gz && \
    tar xzf /tmp/s6-overlay-amd64.tar.gz -C / && \
    rm -f /tmp/s6-overlay-amd64.tar.gz

# Remove building packages
#RUN apk del libgcc \
#     libstdc++ \
#     glib \
#     gcc \
#     libevent-dev \
#     openssl-dev \
#     libc-dev \
#     make \
#     autoconf \
#     libtool

### Copy configuration files
ADD rootfs /

### Change permission folders
RUN nginxUID=`id -u nginx` &&\
    nginxGID=`id -g nginx` &&\
    deluser nginx &&\
    addgroup -g $nginxGID nginx &&\
    adduser -S -u $nginxUID -G nginx -h /home/www -s /sbin/nologin nginx &&\
    chown -R nginx:nginx /home/www/app

### Fix execute scripts when build docker on Windows
#RUN find /etc/cont-init.d -type f -print0 | xargs -0 dos2unix --
#RUN find /etc/nginx -type f -print0 | xargs -0 dos2unix --
#RUN find /etc/php7 -type f -print0 | xargs -0 dos2unix --
#RUN find /etc/services.d -type f -print0 | xargs -0 dos2unix --
#RUN find /home/www -type f -print0 | xargs -0 dos2unix --
#RUN find /root -type f -print0 | xargs -0 dos2unix --
#RUN find /tmp -type f -print0 | xargs -0 dos2unix --
