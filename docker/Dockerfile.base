ARG PHP_VERSION="8.2.11"
ARG ALPINE_VERSION="3.18"
FROM php:${PHP_VERSION}-fpm-alpine${ALPINE_VERSION}

#ENV PHP_INI_DIR /usr/local/etc/php
#CONFIG files in /usr/local/etc/php/conf.d/
#Extension files in /usr/local/lib/php/extensions/no-debug-non-zts-20210902
EXPOSE 80
ENTRYPOINT ["/init"]
WORKDIR /home/www/app
ARG PHP_ENV

# Runtime distribution filename.
ARG BUILD_DATE
ARG VCS_REF
ARG BUILD_VERSION

# Labels.
LABEL com.jivecode.schema-version="1.0" \
    com.jivecode.build-date=$BUILD_DATE \
    com.jivecode.name="vinhio/docker-php:php8" \
    com.jivecode.description="Docker PHP 8" \
    com.jivecode.url="http://www.jivecode.com" \
    com.jivecode.vcs-url="https://github.com/vinhio/docker-php" \
    com.jivecode.vcs-ref=$VCS_REF \
    com.jivecode.vendor="JiveCode" \
    com.jivecode.version=$BUILD_VERSION \
    com.jivecode.docker.cmd="docker run -p 8080:80 php8-base"

### Install packages
RUN apk add --update --no-cache bash \
	yaml \
	curl \
	#perl \
    #wget \
    #mysql-client \
	nginx

# Install PHP dependence libs
RUN apk add --no-cache \
    msmtp \
    procps \
    shadow \
    libzip \
    libpng \
    libjpeg-turbo \
    libwebp \
    freetype \
    icu


# XDebug and php-ext sockets
RUN apk add --update linux-headers

### Install PHP and related packages
# Install PHP extensions deps
RUN apk add --no-cache --virtual build-essentials \
    icu-dev icu-libs zlib-dev g++ make automake autoconf libzip-dev \
    libpng-dev libwebp-dev libjpeg-turbo-dev freetype-dev && \
    docker-php-ext-configure gd --enable-gd --with-freetype --with-jpeg --with-webp && \
    docker-php-ext-install gd && \
    docker-php-ext-install mysqli && \
    docker-php-ext-install pdo_mysql && \
    docker-php-ext-install intl && \
    docker-php-ext-install opcache && \
    docker-php-ext-install exif && \
    docker-php-ext-install zip && \
    docker-php-ext-install bcmath && \
    docker-php-ext-install bz2 && \
    docker-php-ext-install calendar && \
    docker-php-ext-install dba && \
    docker-php-ext-install intl && \
    docker-php-ext-install pcntl && \
    docker-php-ext-install shmop && \
    docker-php-ext-install sockets && \
    docker-php-ext-install sysvmsg && \
    docker-php-ext-install sysvsem && \
    docker-php-ext-install sysvshm

RUN pecl install -o -f redis && docker-php-ext-enable redis && \
    pecl install xdebug-3.2.2 && docker-php-ext-enable xdebug

RUN apk del build-essentials && rm -rf /usr/src/php*

# https://github.com/mlocati/docker-php-extension-installer
#bcmath bz2 calendar ctype curl dba dl_test dom enchant exif ffi fileinfo filter ftp gd gettext gmp hash iconv imap
#intl json ldap mbstring mysqli oci8 odbc opcache pcntl pdo pdo_dblib pdo_firebird pdo_mysql pdo_oci pdo_odbc pdo_pgsql
#pdo_sqlite pgsql phar posix pspell readline reflection session shmop simplexml snmp soap sockets sodium spl standard
#sysvmsg sysvsem sysvshm tidy tokenizer xml xmlreader xmlwriter xsl zend_test zip

### Install S6 overlay
RUN curl -LSs -o /tmp/s6-overlay-amd64.tar.gz \
    https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-amd64.tar.gz && \
    tar xzf /tmp/s6-overlay-amd64.tar.gz -C / && \
    rm -f /tmp/s6-overlay-amd64.tar.gz

# Remove/Replace files
RUN rm -f /usr/local/etc/php-fpm.conf && \
    mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini.bk && \
    rm -rf /tmp/*

### Copy configuration files
ADD rootfs /

### Change permission folders
RUN nginxUID=`id -u nginx` &&\
    nginxGID=`id -g nginx` &&\
    deluser nginx &&\
    addgroup -g $nginxGID nginx &&\
    adduser -S -u $nginxUID -G nginx -h /home/www -s /sbin/nologin nginx &&\
    chown -R nginx:nginx /home/www/app
